Batch Runs
----------

// TODO Brief explanation or see Batch guide.

Batch Parameters
~~~~~~~~~~~~~~~~

// TODO Needs updating. check if this is described in Batch Guide


Repast Simphony supports the creation of a parameter sweep through an xml file or through a scripted
bsf file. Both define a sweep through the defintion of parameter setters. These setters may be constant
setters such that the parameter value remains at its initial value, or the setters may define a list of values
to sweep through, or lastly the setter may function as a numeric stepper that incrementally steps from an
initial value through some ending value. These setters are organized in tree such that the sweep defined
by a child is fully iterated through before the parent is incremented.

.Parameter XML file
Individual parameters are identified as parameter elements and have two required attributes: name
and type.

[source,xml]
----
<parameter name="parameter_1" type=["number", "list", "constant"] ... />
----

* name is the name of the parameter. The current value of the parameter can be retrieved from the
Parameters object using this name.

* type identifies the how the value of the parameter will be set over the course of subsequent batch
runs. Depending on the type, the parameter element will have additional attributes.

.Parameter Types
Currently 3 types of parameters are supported.

* number -- the number type defines a parameter space with a starting, ending and step value. The
sweep mechanism will sweep through the space defined by these values by incrementing the
starting value with the step value until the ending value is reached. For example,

[source,xml]
----
<parameter name="num_1" type="number" start="1" end="4" step="1"/>
----

will start with a value of 1 and increment by 1 until 4 is reached. The type of number (long, double,
float and integer) is inferred from the start, end and step values. If any of the values ends with 'f',
for example

----
4f or 3.21f
----

the parameter will be of the float type. Similarly, if any of the values end with 'L', the type will be a
long. In the absence of a "f" suffix, if any of the numeric values contain a decimal point and one or
more digits (e.g. 4.0) then the type will be a double. Otherwise, the type will be int.

* list -- the list type defines a parameter space as a list.

[source,xml]
----
<parameter name="list_val" type="list" value_type=["string", "boolean", "double", "int",
"long", "float"] values="x y z"/>
----

The sweeper will iterate through the values in the list setting the parameter to that value.The
value_type attribute defines the type of the list elements and can be one of string, boolean,
double, int, long, float. Elements are delimited by a blank space. String elements can be surrounded
by single quotes (') if they contain blank space. For example,

[source,xml]
----
<parameter name="list_val" type="list" value_type="string" values="'foo bar' 'bar' 'baz'"/>
defines 3 elements foo bar, bar and baz.
----

* constant -- constant types define a parameter space consisting of a single constant value.

[source,xml]
----
<parameter name="const_1" type="constant" constant_type=["number", "boolean", "string"]
value="x"/>
----

The sweeper will set the parameter to this constant value. The constant_type attribute defines the
type of the constant value. A constant type of "number" works as its does above where the specified
type of number (float and so forth) is derived from the value itself.

.Nesting Parameters
Parameters can be nested such that the space defined by the child or nested parameter will be swept
before incrementing any values in the parent parameter at which point the child will be reset to its
starting value. For example,

[source,xml]
----
<parameter name="numAgents" type="number" start="1000" end="2000" step="10">
	<parameter name="wealth" type="list" value_type="float" values="10.1 12.3 1234.23 23" />
</parameter>
----
In this case, the sweeper will do set numAgents to 1000 and then sweep through each of the the wealth
values. Then it will increment numAgents to 1010, and sweep through all the wealth values. It will
continue in this fashion until numAgents reaches its end value. In this way, the simulation is run such
that all the combinations of numAgents and wealth values are explored.

.Random Seed Parameter
The default random seed (i.e. the seed for the default random stream) can be specified in a parameter
file using a number type parameter with a name of "randomSeed". For example,

[source,xml]
----
<parameter name="randomSeed" type="number" start="1" end="4" step="1"/>
----

If no such parameter exists, the batch mechanism will set the random seed to the current time in
milliseconds. 

NOTE: This seed will then be used for all the batch runs, that is, each batch run
will use the same random seed.

